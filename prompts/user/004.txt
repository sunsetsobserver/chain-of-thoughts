METER: 4/4

TITLE
Part 4 — Trumpet Duo Feature (Bars 23–26): new material, 4 bars in 4/4. The trumpet continues and one randomly-chosen companion instrument joins it in exact rhythmic unison. All other instruments are tacet placeholders.

FORCES (fixed instrument order per bar)
`["alto_flute","violin","bass_clarinet","trumpet","cello","double_bass"]`

ROLES

* Trumpet: active (lead).
* Companion (choose exactly one once for the whole 4-bar unit): one of `alto_flute`, `violin`, `bass_clarinet`, `cello`, or `double_bass`. The chosen companion plays exactly the same rhythm as the trumpet in each bar (grouped homophony).
* All non-chosen, non-trumpet instruments: tacet placeholders (see TACET IMPLEMENTATION).

MATERIAL (new, not a repeat)
Generate new musical content for both trumpet and its companion. Keep the post-tonal / jazz-influenced palette: thirdal/quartal harmonies, tasteful extensions (2/9, 4/11, 6/13, 7) where musical, smooth voice-leading, clear spacing, avoid blatant parallel perfect 5ths with the bass across successive changes. Favor stepwise with small expressive leaps.

METER & GRID

* Ticks per bar: 16 (quarter=4, half=8, dotted half=12, whole=16).
* Seeds must set `numerator=4`, `denominator=4` (and the meter dimensions use transform `add 0`).

RHYTHMS (allowed patterns per bar, quarter-grid onsets {0,4,8,12})
Pick one pattern per bar (no chaining sub-beats). Use sustained notes only; rests are realized by omission (no silent notes). Keep N exactly as indicated.

* Whole — `N=1`, onset 0, duration 16.
* Half + Half — `N=2`, onsets 0 & 8; durations 8 & 8.
* Dotted half + Quarter — `N=2`, onsets 0 & 12; durations 12 & 4.
* Half + Quarter rest — `N=1`, onset 0, duration 8.
* Quarter rest + Half — `N=1`, onset 4, duration 8 (set `seeds.time = 4`).

RHYTHM → PT MAPPING (simple & strict)

* Use single sustained notes per event (no tied quarters to fake longer values).
* For `N=2` patterns, set the time dimension to a single `add` step sized to the second onset:

  * Half + Half → `time.add 8`
  * Dotted half + Quarter → `time.add 12`
* For `N=1` patterns, any extra add on time is harmless (no extra onset is realized).

GROUPED HOMOPHONY (trumpet + companion)

* In each bar, the trumpet and the chosen companion must have identical onsets and durations (copy-paste the rhythm).
* Pitches/velocities may differ but should voice-lead smoothly and fit ranges.

TACET IMPLEMENTATION (all other instruments)

* For each tacet instrument per bar, include a silent placeholder to satisfy the six-feature schema: `N=1`, `seeds.time ≈ 15`, `duration=1`, `velocity=0`; meter seeds 4/4; numerator/denominator transforms = `add 0`.

HARD RANGES (must stay inside)

* alto_flute: 53..81
* violin: 55..88
* bass_clarinet: 43..74
* trumpet: 60..82
* cello: 48..74
* double_bass: 31..55

SCHEMA REQUIREMENTS (strict)

* Return one JSON object with top-level `"bars":[ … ]` containing exactly 4 bars (conceptual Bars 23–26).
* Each bar has six features in this exact instrument order: `alto_flute, violin, bass_clarinet, trumpet, cello, double_bass`.
* Each feature’s `pt.dimensions` list has exactly six entries in this order:

  1. time, 2) duration, 3) pitch, 4) velocity, 5) numerator (`add 0`), 6) denominator (`add 0`).
* Include a `run_plan` with six entries (one per feature). Each `run_plan[i].feature_name` must equal that feature’s `pt.name`.
* Set seeds `numerator=4`, `denominator=4` for all features.
* Last onset + duration ≤ 16 ticks in every feature.

SELECTION & ROLES (companion)

* Choose one companion instrument at the start of the unit and keep it for all 4 bars.
* Mark roles in `meta.role` clearly:

  * trumpet → `"lead"`
  * chosen companion → `"companion"`
  * all others → `"tacet"`

MANDATORY SELF-CHECK BEFORE RETURNING

* Exactly 4 bars present.
* Trumpet active in all bars; exactly one companion active across all bars; others tacet.
* Trumpet & companion have identical rhythms per bar (onsets/durations match one of the allowed patterns).
* All features’ meter seeds are 4/4; numerator/denominator transforms are `add 0`.
* No event exceeds 16 ticks; all pitches are within ranges.

OUTPUT
Return one JSON object only (no prose).