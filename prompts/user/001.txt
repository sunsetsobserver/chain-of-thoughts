METER: 3/4

TITLE
Part 2 — Intro (Bars 1–15): calm, homophonic string progression building an expressive and quickly shifting harmonic progression idea.
Post-tonal harmonies blending tonal and jazz chords into 12-tone schema, but maintaining some thirdal and quartal qualities with possible jazz extensions (2/9, 4/11, 5, 6/13, 7 where musical).
Paint a surrealist, expressive and colorful harmonic progression.

FORCES
Strings only: violin, cello, double_bass. (Winds tacet placeholders to satisfy six-feature schema; see TACET note.)

TEXTURE (HOMOPHONY)
All three strings always play the same rhythm together: they enter and release at the same times each bar. If there’s a rest, all three rest together.

RHYTHMS (choose freely per bar, any order, with variety; no two identical bars in a row unless musically justified)
Align events to the quarter grid (bar has ticks 0,4,8).

1. Dotted half (fills the bar).
2. Half + Quarter.
3. Quarter + Half.
4. Half + Quarter rest.
5. Quarter rest + Half.

These are achieved by carefully planning for the correct time and duration parameters.

ENGINE REALIZATION OF THESE RHYTHMS
RHYTHM→PT MAPPING (3/4, BAR_TICKS = 12)
• Quarter = 4 ticks, Half = 8, Dotted half = 12 (used as duration values).
• Write exactly the number of musical events in the bar (N = 1 or 2). Use single sustained notes (no chained quarters).
Patterns:
1) Dotted half — N=1, onset 0, duration 12.
2) Half + Quarter — N=2, onsets 0 and 8, durations 8 and 4 (time adds: [8]).
3) Quarter + Half — N=2, onsets 0 and 4, durations 4 and 8 (time adds: [4]).
4) Half + Quarter rest — N=1, onset 0, duration 8 (you may include a harmless extra `add` in time; with N=1 no extra onset is realized).
5) Quarter rest + Half — N=1, onset 4, duration 8 (set seeds.time = 4; you may include a harmless extra `add`).
Rests are realized by omitting events (no silent notes). Do not simulate sustains by repeating the same pitch on 4-tick segments.

HARMONY & VOICING (musical but flexible)
• double_bass = root of each chord.
• cello + violin supply the other two chord tones, favoring post-tonal harmonies (meaning blendings of tonal and jazz chords into 12-tone schema, but maintaining some thirdal and quartal qualities) with possible jazz extensions (2/9, 4/11, 5, 6/13, 7 where musical).
• Aim for clear voice-leading, keep spacing comfortable;
• Build a melodic/harmonic idea across the 11 bars: gentle growth, small inflections, one or two subtle returns of earlier harmony. Make it harmonically rich and quickly shifting, making quick contrast in colours and expressivity.

RANGES (stay inside)
• double_bass : MIDI 28–55 (prefer low–mid).
• cello : MIDI 36–76 (prefer low–mid).
• violin : MIDI 55–100 (prefer mid).

DYNAMICS (calm arc)
Soft and sustained (≈ p ), with very gentle shaping for small crescendos and diminuendos for expressivity; small changes only.

TACET (WINDS PLACEHOLDERS)
Include alto_flute, bass_clarinet, trumpet as silent placeholders each bar: `N=1`, a single note placed safely near bar end (e.g., time seed 11, duration 1, velocity 0) so they are inaudible but schema-valid.

FINAL OUTPUT (schema essentials)
Return one JSON object with top-level `"bars":[ … ]` containing 15 bars .
Each bar has exactly six features with `meta.instrument` in: `["alto_flute","violin","bass_clarinet","trumpet","cello","double_bass"]`.
Each feature’s `pt.dimensions` list has exactly six entries in this order (keys & order matter):

```
"dimensions":[
 {"feature_name":"time", "transformations":[...]},
 {"feature_name":"duration", "transformations":[...]},
 {"feature_name":"pitch", "transformations":[...]},
 {"feature_name":"velocity", "transformations":[...]},
 {"feature_name":"numerator", "transformations":[{"name":"add","args":[0]}]},
 {"feature_name":"denominator","transformations":[{"name":"add","args":[0]}]}
]
```

Include a run_plan with six entries (one per feature); `"feature_name"` matches `pt.name`; meter seeds = 3/4 .
Before returning, self-check: 15 bars present; strings share the same onsets per bar; and instrumental ranges should be respected.

SCHEMA REQUIREMENTS (strict)
• Return ONE JSON object with top-level "bars":[ … ] containing EXACTLY 15 bars (Bars 1–15).
• Each bar has exactly six features with meta.instrument in this order:
  ["alto_flute","violin","bass_clarinet","trumpet","cello","double_bass"].
• Each feature’s pt.dimensions list has exactly six entries in THIS order:
  1) time, 2) duration, 3) pitch, 4) velocity, 5) numerator (add 0), 6) denominator (add 0).
• Include a run_plan with six entries (one per feature); run_plan[i].feature_name MUST equal that feature’s pt.name.
• All meter seeds set numerator=3, denominator=4.
• Last onset + duration ≤ 12 in every feature.
• Strings share identical time/duration within a bar; winds & trumpet are tacet placeholders.

MANDATORY SELF-CHECK BEFORE RETURNING
1) Count bars == 15. If not, regenerate.
2) In every bar: exactly 6 features in the required instrument order.
3) For strings, verify group-homophony: identical onsets/durations across violin/cello/double_bass in that bar.
4) No duration chaining; note counts (N) are 1 or 2 only.
5) All pitches remain within hard ranges.
6) Tacet placeholders: N=1, duration=1, velocity=0, seeds.time≈11.